mychisim(n1 = 20, iter=1000,mean = 10, sigma = 4,ymax=0.12)
mychisim(n1 = 100, iter=1000,mean = 10, sigma = 4,ymax=0.05)
mychisim(n1 = 200, iter=1000,mean = 10, sigma = 4,ymax=0.03)
chisq=mychisim(n1 = 10, iter=1500,mean = 20, sigma = 10,ymax=0.15)
myTsim<-function(n1=10,sigma1=3,mean1=5,iter=1000,ymax=0.1,x=2,y=0.3,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
sd1=apply(data1.mat,2,sd) # sd
ybar=apply(data1.mat,2,mean)  # mean
w=(ybar-mean1)/(sd1/sqrt(n1))      #T stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",T," iterations= ",iter)),
xlab=expression(paste(T, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dt(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(T==frac((bar(y)-mu),s/sqrt(n1))) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return()#list(w=w,summary=summary(w),sd=sd(w),fun="T")) # some output to use if needed
}
myTsim(n1 = 10, iter=1000,mean = 10, sigma = 4,ymax=0.5)
myTsim(n1 = 20, iter=1000,mean = 10, sigma = 4,ymax=0.5)
myTsim(n1 = 100, iter=1000,mean = 10, sigma = 4,ymax=0.5)
myTsim(n1 = 200, iter=1000,mean = 10, sigma = 4,ymax=0.5)
T<-myTsim(n1 = 10, iter=1500,mean = 20, sigma = 10,ymax=0.15)
mychisim2<-function(n1=10,n2=14,sigma1=3,sigma2=3,mean1=5,mean2=10,iter=1000,ymax=0.07,x=40,y=0.04,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
y2=rnorm(n2*iter,mean=mean2,sd=sigma2)
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
data2.mat=matrix(y2,nrow=n2,ncol=iter,byrow=TRUE)
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
ssq2=apply(data2.mat,2,var)
spsq=((n1-1)*ssq1 + (n2-1)*ssq2)/(n1+n2-2) # pooled s squared
w=(n1+n2-2)*spsq/(sigma1^2)#sigma1=sigma2,  Chi square stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]+n[2]," = ",n1+n2," statistic = ",chi^2)),
xlab=expression(paste(chi^2, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dchisq(x,n1+n2-2),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(chi^2==frac((n[1]+n[2]-2)*S[p]^2,sigma^2)) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return()#list(w=w,summary=summary(w),sd=sd(w),fun="Chi-sq")) # some output to use if needed
}
mychisim2(n1=10,n2=10,mean1=5,mean2=10,sigma1=4,sigma2=4,iter=1000)
mychisim2(n1=20,n2=10,mean1=3,mean2=5,sigma1=10,sigma2=4,iter=1000)
mychisim2(n1=50,n2=50,mean1=5,mean2=10,sigma1=4,sigma2=4,iter=10000)
mychisim2(n1=80,n2=50,mean1=3,mean2=5,sigma1=10,sigma2=4,iter=10000)
mychisim2(iter=10000)
myTsim2<-function(n1=10,n2=14,sigma1=3,sigma2=3,mean1=5,mean2=10,iter=1000,ymax=0.5,x=2,y=0.4,...){
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
y2=rnorm(n2*iter,mean=mean2,sd=sigma2)
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
data2.mat=matrix(y2,nrow=n2,ncol=iter,byrow=TRUE)
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
ssq2=apply(data2.mat,2,var)
ybar1= apply(data1.mat,2,mean)
ybar2=apply(data2.mat,2,mean)
spsq=((n1-1)*ssq1 + (n2-1)*ssq2)/(n1+n2-2) # pooled s squared
w=((ybar1-ybar2)-(mean1-mean2))/sqrt(spsq*(1/n1+1/n2))#sigma1=sigma2,  Chi square stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]+n[2]," = ",n1+n2," statistic = ",T)),
xlab=paste(" T Statistic",sep=""), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dt(x,n1+n2-2),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(T==frac((bar(Y)[1]-bar(Y)[2])-(mu[1]-mu[2]),S[p]*sqrt(frac(1,n[1])+frac(1,n[2])))) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title)# Legend #
return()#list(w=w,summary=summary(w),sdw=sd(w),fun="T")) # some output to use if needed
}
myTsim2(n1=10,n2=10,mean1=5,mean2=10,sigma1=4,sigma2=4,iter=1000)
myTsim2(n1=20,n2=10,mean1=3,mean2=5,sigma1=10,sigma2=4,iter=1000)
myTsim2(n1=50,n2=50,mean1=5,mean2=10,sigma1=4,sigma2=4,iter=10000)
myTsim2(n1=80,n2=50,mean1=3,mean2=5,sigma1=10,sigma2=4,iter=10000)
myTsim2(iter=10000)
myFsim2<-function(n1=10,n2=14,sigma1=3,sigma2=2,mean1=5,mean2=10,iter=1000,ymax=0.9,x=6,y=0.5,...){
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
y2=rnorm(n2*iter,mean=mean2,sd=sigma2)
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
data2.mat=matrix(y2,nrow=n2,ncol=iter,byrow=TRUE)
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
ssq2=apply(data2.mat,2,var)
#spsq=((n1-1)*ssq1 + (n2-1)*ssq2)/(n1+n2-2) # pooled s squared
w=ssq1*sigma2^2/(ssq2*sigma1^2) #
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]+n[2]," = ",n1+n2," statistic = ",F)),
xlab=paste("F Statistic",sep=""), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(df(x,n1-1,n2-1),xlim=c(0,6),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(F==frac(s[1]^2,s[2]^2)*frac(sigma[2]^2,sigma[1]^2)) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title)# Legend #
return()#list(w=w,summary=summary(w),sd=sd(w),fun="F")) # some output to use if needed
}
myFsim2(n1=10,n2=10,mean1=5,mean2=10,sigma1=4,sigma2=4,iter=1000)
myFsim2(n1=20,n2=10,mean1=3,mean2=5,sigma1=10,sigma2=4,iter=1000)
myFsim2(n1=50,n2=50,mean1=5,mean2=10,sigma1=4,sigma2=4,iter=10000)
myFsim2(n1=80,n2=50,mean1=3,mean2=5,sigma1=10,sigma2=4,iter=10000)
myFsim2(iter=10000)
myTsim<-function(n1=10,sigma1=3,mean1=5,iter=1000,ymax=0.1,x=2,y=0.3,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
sd1=apply(data1.mat,2,sd) # sd
ybar=apply(data1.mat,2,mean)  # mean
w=(ybar-mean1)/(sd1/sqrt(n1))      #T stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",T," iterations= ",iter)),
xlab=expression(paste(T, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dt(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(T==frac((bar(y)-mu),s/sqrt(n1))) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return()#list(w=w,summary=summary(w),sd=sd(w),fun="T")) # some output to use if needed
}
myTsim(n1 = 10, iter=1000,mean = 10, sigma = 4,ymax=0.5)
myTsim(n1 = 20, iter=1000,mean = 10, sigma = 4,ymax=0.5)
myTsim(n1 = 100, iter=1000,mean = 10, sigma = 4,ymax=0.5)
myTsim(n1 = 200, iter=1000,mean = 10, sigma = 4,ymax=0.5)
T<-myTsim(n1 = 10, iter=1500,mean = 20, sigma = 10,ymax=0.50)
myFsim2<-function(n1=10,n2=14,sigma1=3,sigma2=2,mean1=5,mean2=10,iter=1000,ymax=0.9,x=6,y=0.5,...){
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
y2=rnorm(n2*iter,mean=mean2,sd=sigma2)
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
data2.mat=matrix(y2,nrow=n2,ncol=iter,byrow=TRUE)
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
ssq2=apply(data2.mat,2,var)
#spsq=((n1-1)*ssq1 + (n2-1)*ssq2)/(n1+n2-2) # pooled s squared
w=ssq1*sigma2^2/(ssq2*sigma1^2) #
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]+n[2]," = ",n1+n2," statistic = ",F)),
xlab=paste("F Statistic",sep=""), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(df(x,n1-1,n2-1),xlim=c(0,6),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(F==frac(s[1]^2,s[2]^2)*frac(sigma[2]^2,sigma[1]^2)) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title)# Legend #
return()#list(w=w,summary=summary(w),sd=sd(w),fun="F")) # some output to use if needed
}
myFsim2(n1=10,n2=10,mean1=5,mean2=10,sigma1=4,sigma2=4,iter=1000)
myFsim2(n1=20,n2=10,mean1=3,mean2=5,sigma1=10,sigma2=4,iter=1000)
myFsim2(n1=50,n2=50,mean1=5,mean2=10,sigma1=4,sigma2=4,iter=10000)
myFsim2(n1=80,n2=50,mean1=3,mean2=5,sigma1=10,sigma2=4,iter=10000, ymax=2)
myFsim2(iter=10000)
myFsim2<-function(n1=10,n2=14,sigma1=3,sigma2=2,mean1=5,mean2=10,iter=1000,ymax=0.9,x=6,y=0.5,...){
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
y2=rnorm(n2*iter,mean=mean2,sd=sigma2)
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
data2.mat=matrix(y2,nrow=n2,ncol=iter,byrow=TRUE)
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
ssq2=apply(data2.mat,2,var)
#spsq=((n1-1)*ssq1 + (n2-1)*ssq2)/(n1+n2-2) # pooled s squared
w=ssq1*sigma2^2/(ssq2*sigma1^2) #
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]+n[2]," = ",n1+n2," statistic = ",F)),
xlab=paste("F Statistic",sep=""), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(df(x,n1-1,n2-1),xlim=c(0,6),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(F==frac(s[1]^2,s[2]^2)*frac(sigma[2]^2,sigma[1]^2)) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title)# Legend #
return()#list(w=w,summary=summary(w),sd=sd(w),fun="F")) # some output to use if needed
}
myFsim2(n1=10,n2=10,mean1=5,mean2=10,sigma1=4,sigma2=4,iter=1000)
myFsim2(n1=20,n2=10,mean1=3,mean2=5,sigma1=10,sigma2=4,iter=1000)
myFsim2(n1=50,n2=50,mean1=5,mean2=10,sigma1=4,sigma2=4,iter=10000, ymax=2)
myFsim2(n1=80,n2=50,mean1=3,mean2=5,sigma1=10,sigma2=4,iter=10000, ymax=2)
myFsim2(iter=10000)
apply(4,2,var)
apply(c(1,2,3,4,5,6,7),2,var)
mychisim<-function(n1=10,sigma1=3,mean1=5,iter=1000,ymax=0.1,x=20, y=0.1){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
w=(n1-1)*ssq1/sigma1^2      #chi-sq stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",chi^2)),
xlab=expression(paste(chi^2, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dchisq(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(chi^2==frac((n[1]-1)*s^2,sigma^2)) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return()#list(w=w,summary=summary(w),sd=sd(w),fun="Chi-sq")) # some output to use if needed
}
mychisim(n1 = 10, iter=1000,mean = 10, sigma = 4,ymax=0.15)
mychisim(n1 = 20, iter=1000,mean = 10, sigma = 4,ymax=0.12)
mychisim(n1 = 100, iter=1000,mean = 10, sigma = 4,ymax=0.05)
mychisim(n1 = 200, iter=1000,mean = 10, sigma = 4,ymax=0.03)
chisq=mychisim(n1 = 10, iter=1500,mean = 20, sigma = 10,ymax=0.15)
myTsim<-function(n1=10,sigma1=3,mean1=5,iter=1000,ymax=0.1,x=2,y=0.3,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
sd1=apply(data1.mat,2,sd) # sd
ybar=apply(data1.mat,2,mean)  # mean
w=(ybar-mean1)/(sd1/sqrt(n1))      #T stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",T," iterations= ",iter)),
xlab=expression(paste(T, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dt(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(T==frac((bar(y)-mu),s/sqrt(n1))) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return()#list(w=w,summary=summary(w),sd=sd(w),fun="T")) # some output to use if needed
}
myTsim(n1 = 10, iter=1000,mean = 10, sigma = 4,ymax=0.5)
myTsim(n1 = 20, iter=1000,mean = 10, sigma = 4,ymax=0.5)
myTsim(n1 = 100, iter=1000,mean = 10, sigma = 4,ymax=0.5)
myTsim(n1 = 200, iter=1000,mean = 10, sigma = 4,ymax=0.5)
T<-myTsim(n1 = 10, iter=1500,mean = 20, sigma = 10,ymax=0.50)
mychisim2<-function(n1=10,n2=14,sigma1=3,sigma2=3,mean1=5,mean2=10,iter=1000,ymax=0.07,x=40,y=0.04,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
y2=rnorm(n2*iter,mean=mean2,sd=sigma2)
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
data2.mat=matrix(y2,nrow=n2,ncol=iter,byrow=TRUE)
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
ssq2=apply(data2.mat,2,var)
spsq=((n1-1)*ssq1 + (n2-1)*ssq2)/(n1+n2-2) # pooled s squared
w=(n1+n2-2)*spsq/(sigma1^2)#sigma1=sigma2,  Chi square stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]+n[2]," = ",n1+n2," statistic = ",chi^2)),
xlab=expression(paste(chi^2, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dchisq(x,n1+n2-2),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(chi^2==frac((n[1]+n[2]-2)*S[p]^2,sigma^2)) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return()#list(w=w,summary=summary(w),sd=sd(w),fun="Chi-sq")) # some output to use if needed
}
mychisim2(n1=10,n2=10,mean1=5,mean2=10,sigma1=4,sigma2=4,iter=1000)
mychisim2(n1=20,n2=10,mean1=3,mean2=5,sigma1=10,sigma2=4,iter=1000)
mychisim2(n1=50,n2=50,mean1=5,mean2=10,sigma1=4,sigma2=4,iter=10000)
mychisim2(n1=80,n2=50,mean1=3,mean2=5,sigma1=10,sigma2=4,iter=10000)
mychisim2(iter=10000)
myTsim2<-function(n1=10,n2=14,sigma1=3,sigma2=3,mean1=5,mean2=10,iter=1000,ymax=0.5,x=2,y=0.4,...){
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
y2=rnorm(n2*iter,mean=mean2,sd=sigma2)
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
data2.mat=matrix(y2,nrow=n2,ncol=iter,byrow=TRUE)
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
ssq2=apply(data2.mat,2,var)
ybar1= apply(data1.mat,2,mean)
ybar2=apply(data2.mat,2,mean)
spsq=((n1-1)*ssq1 + (n2-1)*ssq2)/(n1+n2-2) # pooled s squared
w=((ybar1-ybar2)-(mean1-mean2))/sqrt(spsq*(1/n1+1/n2))#sigma1=sigma2,  Chi square stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]+n[2]," = ",n1+n2," statistic = ",T)),
xlab=paste(" T Statistic",sep=""), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dt(x,n1+n2-2),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(T==frac((bar(Y)[1]-bar(Y)[2])-(mu[1]-mu[2]),S[p]*sqrt(frac(1,n[1])+frac(1,n[2])))) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title)# Legend #
return()#list(w=w,summary=summary(w),sdw=sd(w),fun="T")) # some output to use if needed
}
myTsim2(n1=10,n2=10,mean1=5,mean2=10,sigma1=4,sigma2=4,iter=1000)
myTsim2(n1=20,n2=10,mean1=3,mean2=5,sigma1=10,sigma2=4,iter=1000)
myTsim2(n1=50,n2=50,mean1=5,mean2=10,sigma1=4,sigma2=4,iter=10000)
myTsim2(n1=80,n2=50,mean1=3,mean2=5,sigma1=10,sigma2=4,iter=10000)
myTsim2(iter=10000)
myFsim2<-function(n1=10,n2=14,sigma1=3,sigma2=2,mean1=5,mean2=10,iter=1000,ymax=0.9,x=6,y=0.5,...){
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
y2=rnorm(n2*iter,mean=mean2,sd=sigma2)
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
data2.mat=matrix(y2,nrow=n2,ncol=iter,byrow=TRUE)
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
ssq2=apply(data2.mat,2,var)
#spsq=((n1-1)*ssq1 + (n2-1)*ssq2)/(n1+n2-2) # pooled s squared
w=ssq1*sigma2^2/(ssq2*sigma1^2) #
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]+n[2]," = ",n1+n2," statistic = ",F)),
xlab=paste("F Statistic",sep=""), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(df(x,n1-1,n2-1),xlim=c(0,6),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(F==frac(s[1]^2,s[2]^2)*frac(sigma[2]^2,sigma[1]^2)) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title)# Legend #
return()#list(w=w,summary=summary(w),sd=sd(w),fun="F")) # some output to use if needed
}
myFsim2(n1=10,n2=10,mean1=5,mean2=10,sigma1=4,sigma2=4,iter=1000)
myFsim2(n1=20,n2=10,mean1=3,mean2=5,sigma1=10,sigma2=4,iter=1000)
myFsim2(n1=50,n2=50,mean1=5,mean2=10,sigma1=4,sigma2=4,iter=10000, ymax=2)
myFsim2(n1=80,n2=50,mean1=3,mean2=5,sigma1=10,sigma2=4,iter=10000, ymax=2)
myFsim2(iter=10000)
mychisim<-function(n1=10,sigma1=3,mean1=5,iter=1000,ymax=0.1,x=20, y=0.1){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
w=(n1-1)*ssq1/sigma1^2      #chi-sq stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",chi^2)),
xlab=expression(paste(chi^2, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dchisq(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(chi^2==frac((n[1]-1)*s^2,sigma^2)) #mathematical annotation -see ?plotmath
legend(x,y,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return()#list(w=w,summary=summary(w),sd=sd(w),fun="Chi-sq")) # some output to use if needed
}
mychisim(n1 = 10, iter=1000,mean = 10, sigma = 4,ymax=0.15)
mychisim(n1 = 20, iter=1000,mean = 10, sigma = 4,ymax=0.12)
mychisim(n1 = 100, iter=1000,mean = 10, sigma = 4,ymax=0.05)
mychisim(n1 = 200, iter=1000,mean = 10, sigma = 4,ymax=0.03)
chisq=mychisim(n1 = 10, iter=1500,mean = 20, sigma = 10,ymax=0.15)
?rdist
?binom
?binomial
?rbinom
?pbinom
gamma(4)
?beta
y=runif(10,0,5)
sum(y/10)
#task2
runif(10,0,5)
sum(y-(5/2))/(9)
sum(y-(5/2))^2/(9)
25/12
sum(y/10)
5/2
T=sum(y)
Y_bar=T/10
a=0
b=5
n=10
y=runif(n,a,b)
mu=(a+b)/2
sigma=(b-a)^2/12
X_bar=sum(y/n)
S_sq=sum(y-(x_bar))^2/(n-1)
T=sum(y)
Y_bar=T/n
a=0
b=5
n=10
y=runif(n,a,b)
mu=(a+b)/2
sigma=(b-a)^2/12
X_bar=sum(y/n)
S_sq=sum(y-(X_bar))^2/(n-1)
T=sum(y)
Y_bar=T/n
S_sq=sum(y-(X_bar))^2/(n-1)
sum(y-(X_bar))^2/(n-1)
sum(y-(mu))^2/(n-1)
a=0
b=5
n=10
y=runif(n,a,b)
mu=(a+b)/2
sigma=(b-a)^2/12
X_bar=sum(y/n)
S_sq=sum(y-(mu))^2/(n-1)
T=sum(y)
Y_bar=T/n
a=0
b=5
n=10
y=runif(n,a,b)
mu=(a+b)/2
sigma=(b-a)^2/12
X_bar=sum(y/n)
S_sq=sum(y-(mu))^2/(n-1)
T=sum(y)
Y_bar=T/n
?apply
myclt=function(n,iter,a=0,b=5){
y=runif(n*iter,a,b)
data=matrix(y,nr=n,nc=iter,byrow=TRUE)
sm=apply(data,2,sum)
h=hist(sm,plot=FALSE)
hist(sm,col=rainbow(length(h$mids)),freq=FALSE,main="Distribution of the sum of uniforms")
curve(dnorm(x,mean=n*(a+b)/2,sd=sqrt(n*(b-a)^2/12)),add=TRUE,lwd=2,col="Blue")
sm
}
w=myclt(n=10,iter=10000,a=0,b=5)
mean(w)
var(w)
mycltmean=function(n,iter,a=0,b=5){
y=runif(n*iter,a,b)
data=matrix(y,nr=n,nc=iter,byrow=TRUE)
sm=apply(data,2,mean)
h=hist(sm,plot=FALSE)
hist(sm,col=rainbow(length(h$mids)),freq=FALSE,main="Distribution of the sum of uniforms")
curve(dnorm(x,mean=n*(a+b)/2,sd=sqrt(n*(b-a)^2/12)),add=TRUE,lwd=2,col="Blue")
sm
}
w=mycltmean(n=10,iter=10000,a=0,b=5)
mycltmean=function(n,iter,a=0,b=5){
y=runif(n*iter,a,b)
data=matrix(y,nr=n,nc=iter,byrow=TRUE)
sm=apply(data,2,sum)
sm=sm/n
h=hist(sm,plot=FALSE)
hist(sm,col=rainbow(length(h$mids)),freq=FALSE,main="Distribution of the sum of uniforms")
curve(dnorm(x,mean=n*(a+b)/2,sd=sqrt(n*(b-a)^2/12)),add=TRUE,lwd=2,col="Blue")
sm
}
w=mycltmean(n=10,iter=10000,a=0,b=5)
mycltmean=function(n,iter,a=0,b=5){
y=runif(n*iter,a,b)
data=matrix(y,nr=n,nc=iter,byrow=TRUE)
sm=apply(data,2,mean)
h=hist(sm,plot=FALSE)
hist(sm,col=rainbow(length(h$mids)),freq=FALSE,main="Distribution of the sum of uniforms")
curve(dnorm(x,mean=n*(a+b)/2,sd=sqrt(n*(b-a)^2/12)),add=TRUE,lwd=2,col="Blue")
sm
}
w=mycltmean(n=10,iter=10000,a=0,b=5)
mycltmean=function(n,iter,a=0,b=5){
y=runif(n*iter,a,b)
data=matrix(y,nr=n,nc=iter,byrow=TRUE)
sm=apply(data,1,mean)
h=hist(sm,plot=FALSE)
hist(sm,col=rainbow(length(h$mids)),freq=FALSE,main="Distribution of the sum of uniforms")
curve(dnorm(x,mean=n*(a+b)/2,sd=sqrt(n*(b-a)^2/12)),add=TRUE,lwd=2,col="Blue")
sm
}
w=mycltmean(n=10,iter=10000,a=0,b=5)
mymean=function(n,iter,a=0,b=5){
y=runif(n*iter,a,b)
data=matrix(y,nr=n,nc=iter,byrow=TRUE)
sm=apply(data,1,mean)
h=hist(sm,plot=FALSE)
hist(sm,col=rainbow(length(h$mids)),freq=FALSE,main="Distribution of the means")
curve(dnorm(x,mean=n*(a+b)/2,sd=sqrt(n*(b-a)^2/12)),add=TRUE,lwd=2,col="Blue")
sm
}
wmeans=mymean(n=10,iter=10000,a=0,b=5)
mean(wmeans)
var(wmeans)
mymean=function(n,iter,a=0,b=5){
y=runif(n*iter,a,b)
data=matrix(y,nr=n,nc=iter,byrow=TRUE)
sm=apply(data,1,mean)
h=hist(sm,plot=FALSE)
hist(sm,col=rainbow(length(h$mids)),freq=FALSE,main="Distribution of the means")
curve(dnorm(x,mean=n*(a+b)/2,sd=sqrt(n*(b-a)^2/12)),add=TRUE,lwd=2,col="Blue")
sm
}
wmeans=mymean(n=10,iter=10000,a=0,b=5)
mean(wmeans)
var(wmeans)
mycltu=function(n,iter,a=0,b=10){
y=runif(n*iter,a,b)
data=matrix(y,nr=n,nc=iter,byrow=TRUE)
w=apply(data,2,mean)
param=hist(w,plot=FALSE)
ymax=max(param$density)
ymax=1.1*ymax
hist(w,freq=FALSE,  ylim=c(0,ymax), main=paste("Histogram of sample mean",
"\n", "sample size= ",n,sep=""),xlab="Sample mean")
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dnorm(x,mean=(a+b)/2,sd=(b-a)/(sqrt(12*n))),add=TRUE,col="Red",lty=2,lwd=3)
curve(dunif(x,a,b),add=TRUE,lwd=4)
}
mycltu(n=20,iter=100000)
knitr::opts_chunk$set(echo = TRUE)
a=0
b=5
n=10
y=runif(n,a,b)
mu=(a+b)/2
sigma_sq=(b-a)^2/12
X_bar=sum(y/n)
S_sq=sum(y-(mu))^2/(n-1)
T=sum(y)
Y_bar=T/n
show(mu)
show(sigma_sq)
show(x_bar)
a=0
b=5
n=10
y=runif(n,a,b)
mu=(a+b)/2
sigma_sq=(b-a)^2/12
X_bar=sum(y/n)
S_sq=sum(y-(mu))^2/(n-1)
T=sum(y)
Y_bar=T/n
show(mu)
show(sigma_sq)
show(X_bar)
show(S_sq)
show(T)
show(Y_bar)
mycltb=function(n,iter,p=0.5){
y=rbinom(n*iter,size=n,prob=p)
data=matrix(y,nr=n,nc=iter,byrow=TRUE)
w=apply(data,2,mean)
param=hist(w,plot=FALSE)
ymax=max(param$density)
ymax=1.1*ymax
hist(w,freq=FALSE,  ylim=c(0,ymax),
main=paste("Histogram of sample mean","\n", "sample size= ",n,sep=""),
xlab="Sample mean",...)
curve(dnorm(x,mean=n*p,sd=sqrt(p*(1-p))),add=TRUE,col="Red",lty=2,lwd=3)
}
mycltb(n=4,iter=10000,p=0.3)
mycltb=function(n,iter,p=0.5){
y=rbinom(n*iter,size=n,prob=p)
data=matrix(y,nr=n,nc=iter,byrow=TRUE)
w=apply(data,2,mean)
param=hist(w,plot=FALSE)
ymax=max(param$density)
ymax=1.1*ymax
hist(w,freq=FALSE,  ylim=c(0,ymax),
main=paste("Histogram of sample mean","\n", "sample size= ",n,sep=""),
xlab="Sample mean")
curve(dnorm(x,mean=n*p,sd=sqrt(p*(1-p))),add=TRUE,col="Red",lty=2,lwd=3)
}
mycltb(n=4,iter=10000,p=0.3)
mycltb(n=5,iter=10000,p=0.3)
mycltb(n=10,iter=10000,p=0.3)
mycltb(n=20,iter=10000,p=0.3)
mycltb(n=4,iter=10000,p=0.7)
mycltb(n=5,iter=10000,p=0.7)
mycltb(n=10,iter=10000,p=0.7)
mycltb(n=20,iter=10000,p=0.7)
mycltb(n=4,iter=10000,p=0.5)
mycltb(n=5,iter=10000,p=0.5)
mycltb(n=10,iter=10000,p=0.5)
mycltb(n=20,iter=10000,p=0.5)
