paste("Area = ", prob, sep = ""))
##Plot the norms and show probability
curve(
dnorm(x, mean = 0, sd = 1),
xlim = c(-4, 4),
ylab = "Normal Distribution",
main = "Mean = 0, Standard Deviation = 1"
)
xcurve = seq(2, 30, length = 1000)
ycurve = dnorm(xcurve, mean = 0, sd = 1)
polygon(c(2, xcurve, 30), c(0, ycurve, 0), col = "Red")
prob = pnorm(30, mean = 0, sd = 1) - pnorm(2, mean = 0, sd = 1)
prob = round(prob, 4)
text(x = 0,
y = 1 / 2 * dnorm(0, 0, 1),
paste("Area = ", prob, sep = ""))
curve(
dnorm(x, mean = 4, sd = 2),
xlim = c(-10, 20),
ylab = "Normal Distribution",
main = "Mean = 4, Standard Deviation = 2"
)
xcurve = seq(1, 5, length = 1000)
ycurve = dnorm(xcurve, mean = 4, sd = 2)
polygon(c(1, xcurve, 5), c(0, ycurve, 0), col = "Red")
prob = pnorm(5, mean = 4, sd = 2) - pnorm(1, mean = 4, sd = 2)
prob = round(prob, 4)
text(x = 4,
y = 1 / 2 * dnorm(4, 4, 2),
paste("Area = ", prob, sep = ""))
curve(
dnorm(x, mean = 10, sd = 4),
xlim = c(-10, 30),
ylab = "Normal Distribution",
main = "Mean = 10, Standard Deviation = 4"
)
xcurve = seq(-30, 10, length = 1000)
ycurve = dnorm(xcurve, mean = 10, sd = 4)
polygon(c(-30, xcurve, 10), c(0, ycurve, 0), col = "Red")
prob = pnorm(10, mean = 10, sd = 4) - pnorm(-30, mean = 10, sd = 4)
prob = round(prob, 4)
text(x = 10,
y = 1 / 2 * dnorm(10, 10, 4),
paste("Area = ", prob, sep = ""))
curve(
dnorm(x, mean = -2, sd = 1 / 2),
xlim = c(-4, 0),
ylab = "Normal Distribution",
main = "Mean = -2, Standard Deviation = 1/2"
)
xcurve = seq(-3,-2, length = 1000)
ycurve = dnorm(xcurve, mean = -2, sd = 1 / 2)
polygon(c(-3, xcurve,-2), c(0, ycurve, 0), col = "Red")
prob = pnorm(-2, mean = -2, sd = 1 / 2) - pnorm(-3, mean = -2, sd = 1 / 2)
prob = round(prob, 4)
text(x = -2,
y = 1 / 2 * dnorm(-2,-2, 1 / 2),
paste("Area = ", prob, sep = ""))
curve(
dgamma(x, shape = 6, scale = 3),
xlim = c(0, 10),
ylim = c(0, .1),
col = "Red",
lwd = 2,
ylab = "Gamma Density",
main = "Alpha = 6, Beta = 3"
)
xcurve = seq(1, 4, length = 1000)
ycurve = dgamma(xcurve, shape = 6, scale = 3)
polygon(c(1, xcurve, 4), c(0, ycurve, 0), col = "Red")
prob = pgamma(4, shape = 6, scale = 3) - pgamma(1, shape = 6, scale = 3)
prob = round(prob, 4)
text(
x = (1 + 4) / 2,
y = 2 * dgamma(6, shape = 6, scale = 3),
paste("Area = ", prob, sep = "")
)
#Task 5
curve(
dweibull(x, shape = 2, scale = 1),
xlim = c(0, 5),
ylim = c(0, 1),
col = "Blue",
lwd = 2,
ylab = "Weibull density"
)
xcurve = seq(1, 2, length = 1000)
ycurve = dweibull(xcurve, shape = 2, scale = 1)
polygon(c(1, xcurve, 2), c(0, ycurve, 0), col = "Red")
prob = pweibull(2, shape = 2, scale = 1) - pweibull(1, shape = 2, scale = 1)
prob = round(prob, 4)
text(
x = (1+2) / 2,
y = 2 * dweibull(1.5, shape = 2, scale = 1),
paste("Area = ", prob, sep = "")
)
curve(
dweibull(x, shape = 2, scale = 1),
xlim = c(0, 5),
ylim = c(0, 1),
col = "Blue",
lwd = 2,
ylab = "Weibull density"
)
xcurve = seq(1, 2, length = 1000)
ycurve = dweibull(xcurve, shape = 2, scale = 1)
polygon(c(1, xcurve, 2), c(0, ycurve, 0), col = "Red")
prob = pweibull(2, shape = 2, scale = 1) - pweibull(1, shape = 2, scale = 1)
prob = round(prob, 4)
text(
x = 3,
y = 2 * dweibull(1.5, shape = 2, scale = 1),
paste("Area = ", prob, sep = "")
)
curve(
dweibull(x, shape = 5, scale = 4),
xlim = c(0, 10),
ylim = c(0, 1),
col = "Blue",
lwd = 2,
ylab = "Weibull density",
main = "Alpha = 5, Beta = 4"
)
xcurve = seq(3, 5, length = 1000)
ycurve = dweibull(xcurve, shape = 5, scale = 4)
polygon(c(3, xcurve, 5), c(0, ycurve, 0), col = "Red")
prob = pweibull(5, shape = 5, scale = 4) - pweibull(3, shape = 5, scale = 4)
prob = round(prob, 4)
text(
x = 3,
y = 2 * dweibull(1.5, shape = 5, scale = 4),
paste("Area = ", prob, sep = "")
)
curve(
dweibull(x, shape = 5, scale = 4),
xlim = c(0, 10),
ylim = c(0, 1),
col = "Blue",
lwd = 2,
ylab = "Weibull density",
main = "Alpha = 5, Beta = 4"
)
xcurve = seq(3, 5, length = 1000)
ycurve = dweibull(xcurve, shape = 5, scale = 4)
polygon(c(3, xcurve, 5), c(0, ycurve, 0), col = "Red")
prob = pweibull(5, shape = 5, scale = 4) - pweibull(3, shape = 5, scale = 4)
prob = round(prob, 4)
text(
x = 3,
y = 2 * dweibull(4, shape = 5, scale = 4),
paste("Area = ", prob, sep = "")
)
curve(
dweibull(x, shape = 5, scale = 4),
xlim = c(0, 10),
ylim = c(0, 1),
col = "Blue",
lwd = 2,
ylab = "Weibull Density",
main = "Alpha = 5, Beta = 4"
)
xcurve = seq(3, 5, length = 1000)
ycurve = dweibull(xcurve, shape = 5, scale = 4)
polygon(c(3, xcurve, 5), c(0, ycurve, 0), col = "Red")
prob = pweibull(5, shape = 5, scale = 4) - pweibull(3, shape = 5, scale = 4)
prob = round(prob, 4)
text(
x = 7,
y = 1 * dweibull(4, shape = 5, scale = 4),
paste("Area = ", prob, sep = "")
)
curve(
dweibull(x, shape = 4, scale = 10),
xlim = c(0, 20),
ylim = c(0, 1),
col = "Blue",
lwd = 2,
ylab = "Weibull Density",
main = "Alpha = 4, Beta = 10"
)
xcurve = seq(8, 9, length = 1000)
ycurve = dweibull(xcurve, shape = 4, scale = 10)
polygon(c(8, xcurve, 9), c(0, ycurve, 0), col = "Red")
prob = pweibull(9, shape = 4, scale = 10) - pweibull(8, shape = 4, scale = 10)
prob = round(prob, 4)
text(
x = 3,
y = 2 * dweibull(8, shape = 4, scale = 10),
paste("Area = ", prob, sep = "")
)
curve(
dweibull(x, shape = 4, scale = 10),
xlim = c(0, 20),
ylim = c(0, 1),
col = "Blue",
lwd = 2,
ylab = "Weibull Density",
main = "Alpha = 4, Beta = 10"
)
xcurve = seq(8, 9, length = 1000)
ycurve = dweibull(xcurve, shape = 4, scale = 10)
polygon(c(8, xcurve, 9), c(0, ycurve, 0), col = "Red")
prob = pweibull(9, shape = 4, scale = 10) - pweibull(8, shape = 4, scale = 10)
prob = round(prob, 4)
text(
x = 8,
y = 2 * dweibull(8, shape = 4, scale = 10),
paste("Area = ", prob, sep = "")
)
curve(
dweibull(x, shape = 8, scale = 8),
xlim = c(0, 15),
ylim = c(0, 1),
col = "Blue",
lwd = 2,
ylab = "Weibull Density",
main = "Alpha = 8, Beta = 8"
)
xcurve = seq(7, 9, length = 1000)
ycurve = dweibull(xcurve, shape = 8, scale = 8)
polygon(c(7, xcurve, 9), c(0, ycurve, 0), col = "Red")
prob = pweibull(9, shape = 8, scale = 8) - pweibull(7, shape = 8, scale = 8)
prob = round(prob, 4)
text(
x = 10,
y = 2 * dweibull(9, shape = 8, scale = 8),
paste("Area = ", prob, sep = "")
)
curve(
dweibull(x, shape = 8, scale = 8),
xlim = c(0, 15),
ylim = c(0, 1),
col = "Blue",
lwd = 2,
ylab = "Weibull Density",
main = "Alpha = 8, Beta = 8"
)
xcurve = seq(7, 9, length = 1000)
ycurve = dweibull(xcurve, shape = 8, scale = 8)
polygon(c(7, xcurve, 9), c(0, ycurve, 0), col = "Red")
prob = pweibull(9, shape = 8, scale = 8) - pweibull(7, shape = 8, scale = 8)
prob = round(prob, 4)
text(
x = 4,
y = 2 * dweibull(6, shape = 8, scale = 8),
paste("Area = ", prob, sep = "")
)
curve(
dweibull(x, shape = 8, scale = 8),
xlim = c(0, 15),
ylim = c(0, 1),
col = "Blue",
lwd = 2,
ylab = "Weibull Density",
main = "Alpha = 8, Beta = 8"
)
xcurve = seq(7, 9, length = 1000)
ycurve = dweibull(xcurve, shape = 8, scale = 8)
polygon(c(7, xcurve, 9), c(0, ycurve, 0), col = "Red")
prob = pweibull(9, shape = 8, scale = 8) - pweibull(7, shape = 8, scale = 8)
prob = round(prob, 4)
text(
x = 4,
y = 2 * dweibull(7, shape = 8, scale = 8),
paste("Area = ", prob, sep = "")
)
curve(
dbeta(x, shape1 = 2, shape2 = 1),
xlim = c(0, 5),
ylim = c(0, 2),
col = "Blue",
lwd = 2,
ylab = "Beta Density",
main = "Shape1 = 2, Shape2 = 1"
)
xcurve = seq(0, 1, length = 1000)
ycurve = dbeta(xcurve, shape1 = 2, shape2 = 1)
polygon(c(0, xcurve, 1), c(0, ycurve, 0), col = "Red")
prob = pbeta(1, shape1 = 2, shape2 = 1) - pbeta(0, shape1 = 2, shape2 = 1)
prob = round(prob, 4)
text(
x = 3,
y = 2 * dweibull(1.5, shape = 2, scale = 1),
paste("Area = ", prob, sep = "")
)
#Task 6
curve(
dbeta(x, shape1 = 2, shape2 = 1),
xlim = c(0, 5),
ylim = c(0, 2),
col = "Blue",
lwd = 2,
ylab = "Beta Density",
main = "Shape1 = 2, Shape2 = 1"
)
xcurve = seq(0, 1, length = 1000)
ycurve = dbeta(xcurve, shape1 = 2, shape2 = 1)
polygon(c(0, xcurve, 1), c(0, ycurve, 0), col = "Red")
prob = pbeta(1, shape1 = 2, shape2 = 1) - pbeta(0, shape1 = 2, shape2 = 1)
prob = round(prob, 4)
text(
x = 3,
y = 0.8,
paste("Area = ", prob, sep = "")
)
curve(
dbeta(x, shape1 = 1, shape2 = 2),
xlim = c(0, 5),
ylim = c(0, 2),
col = "Blue",
lwd = 2,
ylab = "Beta Density",
main = "Shape1 = 1, Shape2 = 2"
)
xcurve = seq(0, 1, length = 1000)
ycurve = dbeta(xcurve, shape1 = 1, shape2 = 2)
polygon(c(0, xcurve, 1), c(0, ycurve, 0), col = "Red")
prob = pbeta(1, shape1 = 1, shape2 = 2) - pbeta(0, shape1 = 1, shape2 = 2)
prob = round(prob, 4)
text(
x = 3,
y = 0.8,
paste("Area = ", prob, sep = "")
)
curve(
dbeta(x, shape1 = 5, shape2 = 10),
xlim = c(0, 5),
ylim = c(0, 5),
col = "Blue",
lwd = 2,
ylab = "Beta Density",
main = "Shape1 = 5, Shape2 = 10"
)
xcurve = seq(0, 1, length = 1000)
ycurve = dbeta(xcurve, shape1 = 5, shape2 = 10)
polygon(c(0, xcurve, 1), c(0, ycurve, 0), col = "Red")
prob = pbeta(1, shape1 = 5, shape2 = 10) - pbeta(0, shape1 = 5, shape2 = 10)
prob = round(prob, 4)
text(
x = 3,
y = 0.8,
paste("Area = ", prob, sep = "")
)
curve(
dbeta(x, shape1 = 10, shape2 = 5),
xlim = c(0, 5),
ylim = c(0, 5),
col = "Blue",
lwd = 2,
ylab = "Beta Density",
main = "Shape1 = 10, Shape2 = 5"
)
xcurve = seq(0, 1, length = 1000)
ycurve = dbeta(xcurve, shape1 = 10, shape2 = 5)
polygon(c(0, xcurve, 1), c(0, ycurve, 0), col = "Red")
prob = pbeta(1, shape1 = 10, shape2 = 5) - pbeta(0, shape1 = 10, shape2 = 5)
prob = round(prob, 4)
text(
x = 3,
y = 0.8,
paste("Area = ", prob, sep = "")
)
myexp = function(x, a, b) {
(a / b) * '^'(2.71828183, -(a * x / b))
}
curve(
myexp(x,2,3),
xlim = c(0, 5),
ylim = c(0, 5),
col = "Blue",
lwd = 2,
ylab = "Beta Density",
main = "Shape1 = 10, Shape2 = 5"
)
curve(
dexp(x, rate = 2 / 3),
xlim = c(0, 5),
ylim = c(0, 5),
col = "Blue",
lwd = 2,
ylab = "Beta Density",
main = "Shape1 = 10, Shape2 = 5"
)
myexp = function(x, a, b) {
(a / b) * '^'(2.71828183, -(a * x / b))
}
layout(matrix(1:2, nr = 1, nc = 2))
layout.show(2)
curve(
myexp(x,2,3),
xlim = c(0, 5),
ylim = c(0, 5),
col = "Blue",
lwd = 2,
ylab = "Beta Density",
main = "Alpha = 2, Beta = 3"
)
curve(
dexp(x, rate = 2 / 3),
xlim = c(0, 5),
ylim = c(0, 5),
col = "Blue",
lwd = 2,
ylab = "Exponential Density",
main = "Rate = 2/3"
)
myexp = function(x, a, b) {
(a / b) * '^'(2.71828183, -(a * x / b))
}
layout(matrix(1:2, nr = 1, nc = 2))
layout.show(2)
curve(
myexp(x,2,3),
xlim = c(0, 5),
ylim = c(0, 5),
col = "Blue",
lwd = 2,
ylab = "Beta->Exponential Density",
main = "Alpha = 2, Beta = 3"
)
curve(
dnorm(x, mean = 10, sd = 4),
xlim = c(-10, 30),
ylab = "Normal Distribution",
main = "Mean = 10, Standard Deviation = 4"
)
xcurve = seq(-30, 10, length = 1000)
ycurve = dnorm(xcurve, mean = 10, sd = 4)
polygon(c(-30, xcurve, 10), c(0, ycurve, 0), col = "Red")
prob = pnorm(10, mean = 10, sd = 4) - pnorm(-30, mean = 10, sd = 4)
prob = round(prob, 4)
text(x = 10,
y = 1 / 2 * dnorm(10, 10, 4),
paste("Area = ", prob, sep = ""))
knitr::opts_chunk$set(echo = TRUE)
layout(matrix(1:4, nr = 2, nc = 2))
###Normal Density with mu = 10 and sd = 4
curve(dnorm(x, mean = 10, sd =   4),
xlim = c(-10, 30),
ylab = "Normal Distribution")
###Normal Density with mu = 10 and sd = 2
curve(dnorm(x, mean = 10, sd =   2),
xlim = c(-10, 30),
ylab = "Normal Distribution")
###Normal Density with mu = 5 and sd = 10
curve(dnorm(x, mean =  5, sd =  10),
xlim = c(-30, 40),
ylab = "Normal Distribution")
###Normal Density with mu = 5 and sd = .5
curve(dnorm(x, mean =  5, sd = 1 / 2),
xlim = c(-10, 30),
ylab = "Normal Distribution")
getwd()
?dbinom
logpoiss=function(x,param) log(dpois(x,lambda=param))
mymaxlik(x=c(4,6,7,6,5),param=seq(0,20,length=1000),lfun=logpoiss,xlab=expression(lambda),main="Poisson",cex.main=2)
myNRML=function(x0,delta=0.001,llik,xrange,parameter="param"){
f=function(x) (llik(x+delta)-llik(x))/delta
fdash=function(x) (f(x+delta)-f(x))/delta
d=1000
i=0
x=c()
y=c()
x[1]=x0
y[1]=f(x[1])
while(d > delta & i<100){
i=i+1
x[i+1]=x[i]-f(x[i])/fdash(x[i])
y[i+1]=f(x[i+1])
d=abs(x[i+1]-x[i])
}
layout(matrix(1:2,nr=1,nc=2,byrow=TRUE),width=c(1,2))
curve(llik(x), xlim=xrange,xlab=parameter,ylab="log Lik",main="Log Lik")
curve(f(x),xlim=xrange,xaxt="n", xlab=parameter,ylab="derivative",main=  "Newton-Raphson Algorithm \n on the derivative")
points(x,y,col="Red",pch=19,cex=1.5)
axis(1,x,round(x,2),las=2)
abline(h=0,col="Red")
segments(x[1:(i-1)],y[1:(i-1)],x[2:i],rep(0,i-1),col="Blue",lwd=2)
segments(x[2:i],rep(0,i-1),x[2:i],y[2:i],lwd=0.5,col="Green")
list(x=x,y=y)
}
myNRML(x0=1,delta=0.000001,llik=function(x) log(dpois(12,x)*dpois(10,x)),xrange=c(0,20),parameter="lambda" )
logpoiss=function(x,param) log(dpois(x,lambda=param))
mymaxlik(x=c(4,6,7,6,5),param=seq(0,20,length=1000),lfun=logpoiss,xlab=expression(lambda),main="Poisson",cex.main=2)
myNRML=function(x0,delta=0.001,llik,xrange,parameter="param"){
f=function(x) (llik(x+delta)-llik(x))/delta
fdash=function(x) (f(x+delta)-f(x))/delta
d=1000
i=0
x=c()
y=c()
x[1]=x0
y[1]=f(x[1])
while(d > delta & i<100){
i=i+1
x[i+1]=x[i]-f(x[i])/fdash(x[i])
y[i+1]=f(x[i+1])
d=abs(x[i+1]-x[i])
}
layout(matrix(1:2,nr=1,nc=2,byrow=TRUE),width=c(1,2))
curve(llik(x), xlim=xrange,xlab=parameter,ylab="log Lik",main="Log Lik")
curve(f(x),xlim=xrange,xaxt="n", xlab=parameter,ylab="derivative",main=  "Newton-Raphson Algorithm \n on the derivative")
points(x,y,col="Red",pch=19,cex=1.5)
axis(1,x,round(x,2),las=2)
abline(h=0,col="Red")
segments(x[1:(i-1)],y[1:(i-1)],x[2:i],rep(0,i-1),col="Blue",lwd=2)
segments(x[2:i],rep(0,i-1),x[2:i],y[2:i],lwd=0.5,col="Green")
list(x=x,y=y)
}
mynrm <- myNRML(x0=1,delta=0.000001,llik=function(x) log(dpois(12,x)*dpois(10,x)),xrange=c(0,20),parameter="lambda" )
mean(mynrm$y)
install.packages("tinytex")
